{"ast":null,"code":"import _slicedToArray from \"/Users/dyukovlad/dev/fullstack/part1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dyukovlad/dev/fullstack/part1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; // const Hello = ({ name, age }) => {\n//   const bornYear = () => new Date().getFullYear() - age\n//   return (\n//       <div>\n//         <p>Hello {name}, you are {age} years old</p>\n//         <p>So you were probably born in {bornYear()}</p>\n//       </div>\n//   )\n// }\n//   const App = () => {\n//     const name = 'Peter'\n//     const age = 35\n//     return (\n//       <div>\n//         <h1>Greetings</h1>\n//         <Hello name=\"George\" age={21}/>\n//         <Hello name={name} age={age} />\n//       </div>\n//     )\n//   }\n// ReactDOM.render(<App />, document.getElementById('root'));\n// const Display = ({ counter }) => <div>{counter}</div>\n// const Button = ({ onClick, text }) => (\n//   <button onClick={onClick}>\n//     {text}\n//   </button>\n// )\n// const App = () => {\n//   const [ counter, setCounter ] = useState(0)\n//   const setToValue = (value) => setCounter(value)\n//   return (\n//     <div>\n//       <Display counter={counter}/>\n//       <Button\n//         onClick={() => setToValue(counter + 1)}\n//         text='plus'\n//       />\n//       <Button\n//         onClick={() => setToValue(counter - 1)}\n//         text='minus'\n//       />\n//       <Button\n//         onClick={() => setToValue(0)}\n//         text='zero'\n//       />\n//     </div>\n//   )\n// }\n// ***********************************************\n// const History = (props) => {\n//   if (props.allClicks.length === 0) {\n//     return (\n//       <div>\n//         the app is used by pressing the buttons\n//       </div>\n//     )\n//   }\n//   return (\n//     <div>\n//       button press history: {props.allClicks.join(' ')}\n//     </div>\n//   )\n// }\n// const  Button = ({ onClick, text}) => (\n//   <button onClick={onClick}>\n//     {text}\n//   </button>\n// )\n// const App = () => {\n//   const [left, setLeft] = useState(0)\n//   const [right, setRight] = useState(0)\n//   const [allClicks, setAll] = useState([])\n//   const handleLeftClick = () => {\n//     setAll(allClicks.concat('L'))\n//     setLeft(left + 1)\n//   }\n//   const handleRightClick = () => {\n//     setAll(allClicks.concat('R'))\n//     setRight(right + 1)\n//   }\n//   return (\n//     <div>\n//       <div>\n//         {left}\n//         <Button onClick={handleLeftClick} text='left' />\n//         <Button onClick={handleRightClick} text='right' />\n//         {right}\n//         <History allClicks={allClicks} />\n//       </div>\n//     </div>\n//   )\n// }\n// ***********************************************\n\nconst App = props => {\n  const _useState = useState(20),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const setToValue = newValue => () => {\n    setValue(newValue);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, value, React.createElement(\"button\", {\n    onClick: setToValue(1000),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"thousand\"), React.createElement(\"button\", {\n    onClick: setToValue(0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"reset\"), React.createElement(\"button\", {\n    onClick: setToValue(value + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"increment\"));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/dyukovlad/dev/fullstack/part1/src/index.js"],"names":["React","useState","ReactDOM","App","props","value","setValue","setToValue","newValue","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA,oBACKH,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QACdI,KADc;AAAA,QACPC,QADO;;AAGrB,QAAMC,UAAU,GAAIC,QAAD,IAAc,MAAM;AACrCF,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,EAEE;AAAQ,IAAA,OAAO,EAAEE,UAAU,CAAC,IAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAQ,IAAA,OAAO,EAAEA,UAAU,CAAC,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAQ,IAAA,OAAO,EAAEA,UAAU,CAACF,KAAK,GAAG,CAAT,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF;AAQD,CAfD;;AAgBAH,QAAQ,CAACO,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n// const Hello = ({ name, age }) => {\n//   const bornYear = () => new Date().getFullYear() - age\n\n//   return (\n//       <div>\n//         <p>Hello {name}, you are {age} years old</p>\n//         <p>So you were probably born in {bornYear()}</p>\n//       </div>\n//   )\n// }\n  \n//   const App = () => {\n//     const name = 'Peter'\n//     const age = 35\n\n//     return (\n//       <div>\n//         <h1>Greetings</h1>\n//         <Hello name=\"George\" age={21}/>\n//         <Hello name={name} age={age} />\n\n\n\n//       </div>\n//     )\n//   }\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// const Display = ({ counter }) => <div>{counter}</div>\n\n// const Button = ({ onClick, text }) => (\n//   <button onClick={onClick}>\n//     {text}\n//   </button>\n// )\n\n// const App = () => {\n//   const [ counter, setCounter ] = useState(0)\n//   const setToValue = (value) => setCounter(value)\n\n\n//   return (\n//     <div>\n//       <Display counter={counter}/>\n//       <Button\n//         onClick={() => setToValue(counter + 1)}\n//         text='plus'\n//       />\n//       <Button\n//         onClick={() => setToValue(counter - 1)}\n//         text='minus'\n//       />\n//       <Button\n//         onClick={() => setToValue(0)}\n//         text='zero'\n//       />\n//     </div>\n//   )\n// }\n// ***********************************************\n// const History = (props) => {\n//   if (props.allClicks.length === 0) {\n//     return (\n//       <div>\n//         the app is used by pressing the buttons\n//       </div>\n//     )\n//   }\n\n//   return (\n//     <div>\n//       button press history: {props.allClicks.join(' ')}\n//     </div>\n//   )\n// }\n\n// const  Button = ({ onClick, text}) => (\n//   <button onClick={onClick}>\n//     {text}\n//   </button>\n// )\n\n// const App = () => {\n//   const [left, setLeft] = useState(0)\n//   const [right, setRight] = useState(0)\n//   const [allClicks, setAll] = useState([])\n\n//   const handleLeftClick = () => {\n//     setAll(allClicks.concat('L'))\n//     setLeft(left + 1)\n//   }\n\n//   const handleRightClick = () => {\n//     setAll(allClicks.concat('R'))\n//     setRight(right + 1)\n//   }\n\n//   return (\n//     <div>\n//       <div>\n//         {left}\n//         <Button onClick={handleLeftClick} text='left' />\n//         <Button onClick={handleRightClick} text='right' />\n//         {right}\n//         <History allClicks={allClicks} />\n//       </div>\n//     </div>\n//   )\n// }\n// ***********************************************\nconst App = (props) => {\n  const [value, setValue] = useState(20)\n\n  const setToValue = (newValue) => () => {\n    setValue(newValue)\n  }\n\n  return (\n    <div>\n      {value}\n      <button onClick={setToValue(1000)}>thousand</button>\n      <button onClick={setToValue(0)}>reset</button>\n      <button onClick={setToValue(value + 1)}>increment</button>\n    </div>\n  )\n}\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}