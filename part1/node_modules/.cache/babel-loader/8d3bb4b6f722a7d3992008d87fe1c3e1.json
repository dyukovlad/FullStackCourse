{"ast":null,"code":"import _slicedToArray from \"/Users/dyukovlad/dev/fullstack/part1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dyukovlad/dev/fullstack/part1/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'; // const Hello = ({ name, age }) => {\n//   const bornYear = () => new Date().getFullYear() - age\n//   return (\n//       <div>\n//         <p>Hello {name}, you are {age} years old</p>\n//         <p>So you were probably born in {bornYear()}</p>\n//       </div>\n//   )\n// }\n//   const App = () => {\n//     const name = 'Peter'\n//     const age = 35\n//     return (\n//       <div>\n//         <h1>Greetings</h1>\n//         <Hello name=\"George\" age={21}/>\n//         <Hello name={name} age={age} />\n//       </div>\n//     )\n//   }\n// ReactDOM.render(<App />, document.getElementById('root'));\n// const Display = ({ counter }) => <div>{counter}</div>\n// const Button = ({ onClick, text }) => (\n//   <button onClick={onClick}>\n//     {text}\n//   </button>\n// )\n// const App = () => {\n//   const [ counter, setCounter ] = useState(0)\n//   const setToValue = (value) => setCounter(value)\n//   return (\n//     <div>\n//       <Display counter={counter}/>\n//       <Button\n//         onClick={() => setToValue(counter + 1)}\n//         text='plus'\n//       />\n//       <Button\n//         onClick={() => setToValue(counter - 1)}\n//         text='minus'\n//       />\n//       <Button\n//         onClick={() => setToValue(0)}\n//         text='zero'\n//       />\n//     </div>\n//   )\n// }\n// ***********************************************\n// const History = (props) => {\n//   if (props.allClicks.length === 0) {\n//     return (\n//       <div>\n//         the app is used by pressing the buttons\n//       </div>\n//     )\n//   }\n//   return (\n//     <div>\n//       button press history: {props.allClicks.join(' ')}\n//     </div>\n//   )\n// }\n// const  Button = ({ onClick, text}) => (\n//   <button onClick={onClick}>\n//     {text}\n//   </button>\n// )\n// const App = () => {\n//   const [left, setLeft] = useState(0)\n//   const [right, setRight] = useState(0)\n//   const [allClicks, setAll] = useState([])\n//   const handleLeftClick = () => {\n//     setAll(allClicks.concat('L'))\n//     setLeft(left + 1)\n//   }\n//   const handleRightClick = () => {\n//     setAll(allClicks.concat('R'))\n//     setRight(right + 1)\n//   }\n//   return (\n//     <div>\n//       <div>\n//         {left}\n//         <Button onClick={handleLeftClick} text='left' />\n//         <Button onClick={handleRightClick} text='right' />\n//         {right}\n//         <History allClicks={allClicks} />\n//       </div>\n//     </div>\n//   )\n// }\n// ***********************************************\n\nconst Button = props => React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, props.text); // const Display = (props) => <div>{props.value}</div>\n\n\nconst App = props => {\n  const _useState = useState(20),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  useEffect(() => {\n    // Обновляем заголовок документа, используя API браузера\n    document.title = \"\\u0412\\u044B \\u043D\\u0430\\u0436\\u0430\\u043B\\u0438 \".concat(value, \" \\u0440\\u0430\\u0437\");\n  });\n\n  const setToValue = newValue => {\n    setValue(newValue);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"\\u0412\\u044B \\u043D\\u0430\\u0436\\u0430\\u043B\\u0438 \", value, \" \\u0440\\u0430\\u0437\"), React.createElement(Button, {\n    handleClick: () => setToValue(1000),\n    text: \"thousand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => setToValue(0),\n    text: \"reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => setToValue(value + 1),\n    text: \"increment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/dyukovlad/dev/fullstack/part1/src/index.js"],"names":["React","useState","useEffect","ReactDOM","Button","props","handleClick","text","App","value","setValue","document","title","setToValue","newValue","render","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAIC,KAAD,IACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqCD,KAAK,CAACE,IAA3C,CADF,C,CAIA;;;AAEA,MAAMC,GAAG,GAAIH,KAAD,IAAW;AAAA,oBACKJ,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QACdQ,KADc;AAAA,QACPC,QADO;;AAGrBR,EAAAA,SAAS,CAAC,MAAM;AACd;AACAS,IAAAA,QAAQ,CAACC,KAAT,+DAA8BH,KAA9B;AACD,GAHQ,CAAT;;AAKA,QAAMI,UAAU,GAAIC,QAAD,IAAc;AAC/BJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAAcL,KAAd,wBAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMI,UAAU,CAAC,IAAD,CAArC;AAA6C,IAAA,IAAI,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMA,UAAU,CAAC,CAAD,CAArC;AAA0C,IAAA,IAAI,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMA,UAAU,CAACJ,KAAK,GAAG,CAAT,CAArC;AAAkD,IAAA,IAAI,EAAC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CArBD;;AAsBAN,QAAQ,CAACY,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEJ,QAAQ,CAACK,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\n// const Hello = ({ name, age }) => {\n//   const bornYear = () => new Date().getFullYear() - age\n\n//   return (\n//       <div>\n//         <p>Hello {name}, you are {age} years old</p>\n//         <p>So you were probably born in {bornYear()}</p>\n//       </div>\n//   )\n// }\n  \n//   const App = () => {\n//     const name = 'Peter'\n//     const age = 35\n\n//     return (\n//       <div>\n//         <h1>Greetings</h1>\n//         <Hello name=\"George\" age={21}/>\n//         <Hello name={name} age={age} />\n\n\n\n//       </div>\n//     )\n//   }\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// const Display = ({ counter }) => <div>{counter}</div>\n\n// const Button = ({ onClick, text }) => (\n//   <button onClick={onClick}>\n//     {text}\n//   </button>\n// )\n\n// const App = () => {\n//   const [ counter, setCounter ] = useState(0)\n//   const setToValue = (value) => setCounter(value)\n\n\n//   return (\n//     <div>\n//       <Display counter={counter}/>\n//       <Button\n//         onClick={() => setToValue(counter + 1)}\n//         text='plus'\n//       />\n//       <Button\n//         onClick={() => setToValue(counter - 1)}\n//         text='minus'\n//       />\n//       <Button\n//         onClick={() => setToValue(0)}\n//         text='zero'\n//       />\n//     </div>\n//   )\n// }\n// ***********************************************\n// const History = (props) => {\n//   if (props.allClicks.length === 0) {\n//     return (\n//       <div>\n//         the app is used by pressing the buttons\n//       </div>\n//     )\n//   }\n\n//   return (\n//     <div>\n//       button press history: {props.allClicks.join(' ')}\n//     </div>\n//   )\n// }\n\n// const  Button = ({ onClick, text}) => (\n//   <button onClick={onClick}>\n//     {text}\n//   </button>\n// )\n\n// const App = () => {\n//   const [left, setLeft] = useState(0)\n//   const [right, setRight] = useState(0)\n//   const [allClicks, setAll] = useState([])\n\n//   const handleLeftClick = () => {\n//     setAll(allClicks.concat('L'))\n//     setLeft(left + 1)\n//   }\n\n//   const handleRightClick = () => {\n//     setAll(allClicks.concat('R'))\n//     setRight(right + 1)\n//   }\n\n//   return (\n//     <div>\n//       <div>\n//         {left}\n//         <Button onClick={handleLeftClick} text='left' />\n//         <Button onClick={handleRightClick} text='right' />\n//         {right}\n//         <History allClicks={allClicks} />\n//       </div>\n//     </div>\n//   )\n// }\n// ***********************************************\nconst Button = (props) => (\n  <button onClick={props.handleClick}>{props.text}</button>\n)\n\n// const Display = (props) => <div>{props.value}</div>\n\nconst App = (props) => {\n  const [value, setValue] = useState(20)\n\n  useEffect(() => {\n    // Обновляем заголовок документа, используя API браузера\n    document.title = `Вы нажали ${value} раз`;\n  });\n\n  const setToValue = (newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div>\n      {/* <Display value={value}></Display> */}\n      <p>Вы нажали {value} раз</p>\n      <Button handleClick={() => setToValue(1000)} text=\"thousand\"></Button>\n      <Button handleClick={() => setToValue(0)} text=\"reset\"></Button>\n      <Button handleClick={() => setToValue(value + 1)} text=\"increment\"></Button>\n    </div>\n  )\n}\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}